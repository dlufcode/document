/**
     *
     * @param arr
     * @return
     */
    public static int Min(int[] arr) {
        int len = arr.length;
        if (len == 0) {
            return 0;
        }
        int left = 0;
        int right = len - 1;
        int mid = left;
        while (arr[left] >= arr[right]) {
            if (left == right - 1) {
                mid = right;
                break;
            }
            mid = (left + right) / 2;
            if (arr[left] == arr[right] && arr[mid] == arr[left]) {
                return midOrder(arr, left, right);
            }
            if (arr[mid] >= arr[right]) {
                left = mid;
            } else {
                right = mid;
            }
        }
        return arr[mid];
    }



/**
     *
     * @param arr
     * @param left
     * @param right
     * @return
     */
    public static int midOrder(int[] arr, int left, int right) {
        int result = arr[left];
        left += 1;

        for (int i = left; i <= right; i++) {
            if (arr[i] < arr[right]) {
                result = arr[i];
                break;
            }
        }
        return result;
    }



int[] arr = {3, 4, 5, 1, 2};
//        int[] arr = {1, 1, 1, 0, 1};
        System.out.println(Min(arr));